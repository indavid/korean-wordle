{"mappings":"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","sources":["app.js"],"sourcesContent":["const ANSWER_LENGTH = 5; // How many lettters is the answer\nconst ROUNDS = 6; // How many guesses a player gets\n\n// Contains Game State\nclass GameBoard {\n  constructor() {\n    this.rows = ROUNDS; // Number of Guesses\n    this.cols = ANSWER_LENGTH; // Length of Answer\n    this.board = Array.from(Array(this.rows), () =>\n      new Array(this.cols).fill(null)\n    );\n    this.styleBoard = Array.from(Array(this.rows), () =>\n      new Array(this.cols).fill(null)\n    );\n  }\n  // Getter method for gameBoard 2-D Array\n  getBoard() {\n    return this.board;\n  }\n  // Add Letter to Array\n  addLetter(rows, cols, letter) {\n    this.board[rows][cols] = letter;\n  }\n  // Delete Letter to Array\n  deleteLetter(rows, cols) {\n    this.board[rows][cols] = null;\n  }\n  // Getter for styleBoard\n  getStyleBoard() {\n    return this.styleBoard;\n  }\n  // Add Style to Array\n  addStyle(rows, cols, style) {\n    this.styleBoard[rows][cols] = style;\n  }\n  // Delete Style to Array\n  deleteStyle(rows, cols) {\n    this.styleBoard[rows][cols] = null;\n  }\n}\n\n// Contains Game Logic\nclass GameController {\n  constructor(gameBoard) {\n    this.gameBoard = gameBoard;\n    this.wordList = wordList;\n    this.answer = \"\";\n    this.answerLength = ANSWER_LENGTH;\n    this.rounds = ROUNDS;\n    this.currentRound = 0;\n    this.currentGuess = \"\";\n    this.isGameRunning = true;\n    this.isGameWon = false;\n  }\n  // Getter for isGameWon\n  getIsGameWon = () => {\n    return this.isGameWon;\n  };\n  getIsGameRunning = () => {\n    return this.isGameRunning;\n  };\n  // Getter method for GameBoard object's gameBoard array\n  getBoard = () => {\n    return this.gameBoard.getBoard();\n  };\n  // Getter method for GameBoard object's styleBoard array\n  getStyleBoard = () => {\n    return this.gameBoard.getStyleBoard();\n  };\n  // Load answer\n  loadAnswer() {\n    try {\n      this.answer = this.wordList[Math.floor(Math.random() * 38, 698)];\n      console.log(this.answer);\n    } catch (error) {\n      console.error(\"Could not load answer\");\n    }\n  }\n  // Check if input is an English letter\n  isLetter(letter) {\n    return /^[a-zA-Z]$/.test(letter);\n  }\n  // Check if key.event is a Korean letter\n  isKorean(letter) {\n    const koreanRegex = /[\\u3130-\\u318F\\uAC00-\\uD7AF]+/;\n    return koreanRegex.test(letter);\n  }\n\n  convertToKorean(letter) {\n    const englishToKorean = {\n      q: \"ㅂ\",\n      w: \"ㅈ\",\n      e: \"ㄷ\",\n      r: \"ㄱ\",\n      t: \"ㅅ\",\n      y: \"ㅛ\",\n      u: \"ㅕ\",\n      i: \"ㅑ\",\n      o: \"ㅐ\",\n      p: \"ㅔ\",\n      a: \"ㅁ\",\n      s: \"ㄴ\",\n      d: \"ㅇ\",\n      f: \"ㄹ\",\n      g: \"ㅎ\",\n      h: \"ㅗ\",\n      j: \"ㅓ\",\n      k: \"ㅏ\",\n      l: \"ㅣ\",\n      z: \"ㅋ\",\n      x: \"ㅌ\",\n      c: \"ㅊ\",\n      v: \"ㅍ\",\n      b: \"ㅠ\",\n      n: \"ㅜ\",\n      m: \"ㅡ\",\n    };\n    if (englishToKorean[letter.toLowerCase()]) {\n      return englishToKorean[letter.toLowerCase()];\n    }\n  }\n  // Add letter to gameBoard array\n  addLetter(letter) {\n    if (this.currentGuess.length < this.answerLength) {\n      this.currentGuess += letter;\n    } else {\n      this.currentGuess =\n        this.currentGuess.substring(0, this.answerLength - 1) + letter;\n    }\n    this.gameBoard.addLetter(\n      this.currentRound,\n      this.currentGuess.length - 1,\n      letter\n    );\n    this.gameBoard.addStyle(\n      this.currentRound,\n      this.currentGuess.length - 1,\n      \"filled\"\n    );\n  }\n  // Delete letter from gameBoard array\n  deleteLetter() {\n    this.currentGuess = this.currentGuess.substring(\n      0,\n      this.currentGuess.length - 1\n    );\n    this.gameBoard.deleteLetter(this.currentRound, this.currentGuess.length);\n    this.gameBoard.deleteStyle(this.currentRound, this.currentGuess.length);\n  }\n  // Makes an object out of an array of letters and keeps count of how many letters are there\n  makeMap(array) {\n    const obj = {};\n    for (let i = 0; i < array.length; i++) {\n      const letter = array[i];\n      if (obj[letter]) {\n        obj[letter]++;\n      } else {\n        obj[letter] = 1;\n      }\n    }\n    return obj;\n  }\n  // Verify if currentGuess is answer\n  verifyGuess() {\n    if (this.currentGuess.length != this.answerLength) {\n      console.log(\"not long enough\");\n      return;\n    } else if (!this.wordList.includes(this.currentGuess)) {\n      console.log(\"not a valid word\");\n      return;\n    }\n    // make objects for encapsulation\n    const answerParts = this.answer.split(\"\");\n    const answerMap = this.makeMap(answerParts);\n    const guessParts = this.currentGuess.split(\"\");\n    // check if game is won\n    this.isGameWon = true;\n    // first pass to see which letter we can mark as correct (green)\n    for (let i = 0; i < this.answerLength; i++) {\n      if (guessParts[i] === answerParts[i]) {\n        this.gameBoard.addStyle(this.currentRound, i, \"correct\");\n        answerMap[guessParts[i]]--;\n      }\n    }\n    // second pass to see which letters are close or wrong (yellow or gray)\n    for (let i = 0; i < this.answerLength; i++) {\n      if (guessParts[i] === answerParts[i]) {\n        // do nothing\n      } else if (answerMap[guessParts[i]] && answerMap[guessParts[i]] > 0) {\n        this.gameBoard.addStyle(this.currentRound, i, \"close\");\n        answerMap[guessParts[i]]--;\n        this.isGameWon = false;\n      } else {\n        this.gameBoard.addStyle(this.currentRound, i, \"wrong\");\n        this.isGameWon = false;\n      }\n    }\n    // advance to next guess\n    this.currentRound++;\n    this.currentGuess = \"\";\n\n    // Check if game is over - Play out Win or Lose conditions\n    if (this.isGameWon) {\n      this.isGameRunning = false;\n      this.currentRound = 6;\n    } else if (this.currentRound === this.rounds) {\n      this.isGameRunning = false;\n    }\n  }\n  // Handle game logic of keyboard event from user\n  handleEvent(key, preventDefault) {\n    if (key === \"Backspace\" || key === \"Delete\") {\n      this.deleteLetter();\n    } else if (key === \"Enter\" || key === \"ENTER\") {\n      this.verifyGuess();\n    } else if (this.isLetter(key) || this.isKorean(key)) {\n      if (this.isLetter(key)) {\n        key = this.convertToKorean(key);\n      }\n      this.addLetter(key);\n    } else {\n      preventDefault;\n    }\n  }\n}\n\nclass ScreenController {\n  constructor(gameController) {\n    this.body = document.body;\n    this.boardDiv = document.querySelector(\".board\");\n    this.keyButtons = document.querySelectorAll(\".key\");\n    this.gameController = gameController;\n    this.spinner = document.querySelector(\".spinner\");\n  }\n  // Set loading icon spinning\n  setLoading(isLoading) {\n    isLoading\n      ? (this.spinner.style.visibility = \"visible\")\n      : (this.spinner.style.visibility = \"hidden\");\n  }\n  // Render View based off of Model given by Controller\n  renderBoard() {\n    // Reset the board div\n    this.boardDiv.innerHTML = \"\";\n    // Render board div based on current GameBoard object\n    const board = this.gameController.getBoard();\n    const styleBoard = this.gameController.getStyleBoard();\n    for (let i = 0; i < board.length; i++) {\n      const wordDiv = document.createElement(\"div\");\n      wordDiv.className = \"word p\" + i;\n      this.boardDiv.appendChild(wordDiv);\n      for (let j = 0; j < board[i].length; j++) {\n        const letterDiv = document.createElement(\"div\");\n        letterDiv.className = \"letter\";\n        wordDiv.appendChild(letterDiv);\n        letterDiv.innerText = board[i][j];\n        if (letterDiv.innerText) {\n          letterDiv.classList.add(styleBoard[i][j]);\n        }\n      }\n    }\n  }\n  // Add Event Listener to body for user events and hand to Controller for Game Logic\n  listen() {\n    this.body.addEventListener(\"keydown\", ({ key, preventDefault }) => {\n      this.gameController.handleEvent(key, preventDefault);\n      this.renderBoard();\n      console.log(\n        this.gameController.getIsGameRunning() +\n          \" and \" +\n          this.gameController.getIsGameWon()\n      );\n      if (!this.gameController.getIsGameRunning()) {\n        if (this.gameController.getIsGameWon()) {\n          setTimeout(() => alert(\"You won! :)\"), 500);\n        } else {\n          setTimeout(() => alert(\"You lose. :(\"), 500);\n        }\n      }\n    });\n    this.keyButtons.forEach((key) => {\n      key.addEventListener(\"click\", () => {\n        this.gameController.handleEvent(key.innerText, null);\n        this.renderBoard();\n        if (!this.gameController.getIsGameRunning()) {\n          if (this.gameController.getIsGameWon()) {\n            setTimeout(() => alert(\"You won! :)\"), 500);\n          } else {\n            setTimeout(() => alert(\"You lose. :(\"), 500);\n          }\n        }\n      });\n    });\n  }\n}\n\nfunction init() {\n  const board = new GameBoard();\n  console.log(board.gameBoard);\n  const game = new GameController(board);\n  game.loadAnswer();\n  const screen = new ScreenController(game);\n  screen.renderBoard();\n  screen.listen();\n}\n\ninit();\n"],"names":[],"version":3,"file":"index.7c0ccee6.js.map","sourceRoot":"/__parcel_source_root/"}